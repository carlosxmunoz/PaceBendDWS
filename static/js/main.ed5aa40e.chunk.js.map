{"version":3,"sources":["Components/PaceBend/segment.js","Components/PaceBendParent/paceBendParent.js","index.js"],"names":["Maps","_this","Object","classCallCheck","this","_super","call","state","zoom","geojsonDataByLines","encoded","points","index","len","length","lat","lng","b","shift","result","charAt","charCodeAt","push","latitude","longitude","i","x_sum","y_sum","console","log","react_default","a","createElement","Map","style","height","center","TileLayer","attribution","url","map","feature","Marker","position","Popup","Component","PaceBendParent","className","segment","React","ReactDOM","render","paceBendParent","document","getElementById"],"mappings":"qrEA6KeA,oDAnHX,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACVC,EAAAI,EAAAC,KAAAF,OACKG,MAAQ,CAGTC,KAAM,GACNC,mBAAoBA,GANdR,qDAgCPS,GAKH,IAHA,IAAIC,EAAS,GACTC,EAAQ,EAAGC,EAAMH,EAAQI,OACzBC,EAAM,EAAGC,EAAM,EACZJ,EAAQC,GAAK,CAChB,IAAII,EAAGC,EAAQ,EAAGC,EAAS,EAC3B,GAEIA,IAAe,IADfF,EAAIP,EAAQU,OAAOR,KAASS,WAAW,GAAK,MACpBH,EACxBA,GAAS,QACJD,GAAK,IAEdF,GAD4B,IAAN,EAATI,KAAqBA,GAAU,GAAMA,GAAU,EAE5DD,EAAQ,EACRC,EAAS,EACT,GAEIA,IAAe,IADfF,EAAIP,EAAQU,OAAOR,KAASS,WAAW,GAAK,MACpBH,EACxBA,GAAS,QACJD,GAAK,IAEdD,GAD4B,IAAN,EAATG,KAAqBA,GAAU,GAAMA,GAAU,EAE5DR,EAAOW,KAAK,CAAEC,SAAWR,EAAM,IAAMS,UAAYR,EAAM,MAE3D,OAAOL,qCAGAA,GACP,IAEIc,EAFAC,EAAQ,EACRC,EAAQ,EAEZ,IAAKF,EAAI,EAAGA,EAAId,EAAOG,OAAQW,IAC3BC,GAASf,EAAOc,GAAG,GACnBE,GAAShB,EAAOc,GAAG,GAIvB,OADAG,QAAQC,IAAI,QAASH,EAAO,SACrB,CAAEA,EAASf,EAAOG,OAAWa,EAAShB,EAAOG,yCAOpD,OACIgB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACIC,MAAO,CAAEC,OAAQ,SACjBC,OAAQ,CAAC,OAAQ,WACjB5B,KAAMJ,KAAKG,MAAMC,MACjBsB,EAAAC,EAAAC,cAACK,EAAA,EAAD,CACIC,YAAY,yEACZC,IAAI,4CACP9B,EAAmB+B,IAAI,SAACC,GAAD,OACpBX,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAQC,SAAUF,EAAO,KACrBX,EAAAC,EAAAC,cAACY,EAAA,EAAD,KAEId,EAAAC,EAAAC,cAAA,YACKS,EAAO,KACRX,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WAHJ,gBAIkBS,EAAO,YACrBX,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WANJ,kBAOoBS,EAAO,IAP3B,SAOyCX,EAAAC,EAAAC,cAAA,WAPzC,eAQiBS,EAAO,KARxB,SAQuCX,EAAAC,EAAAC,cAAA,WARvC,kBASoBS,EAAO,IAT3B,SASyCX,EAAAC,EAAAC,cAAA,yBApGtDa,aCbJC,oQAVP,OAEIhB,EAAAC,EAAAC,cAAA,OAAKe,UAAU,oBACXjB,EAAAC,EAAAC,cAACgB,EAAD,cA9BaC,IAAMJ,WCFnCK,IAASC,OAAOrB,EAAAC,EAAAC,cAACoB,EAAD,MAAoBC,SAASC,eAAe","file":"static/js/main.ed5aa40e.chunk.js","sourcesContent":["//data\n\nimport React, { Component } from 'react';\nimport { PolyLine, Map, TileLayer, Marker, Popup } from 'react-leaflet';\nimport { Polyline } from 'react-leaflet';\nimport geojsonDataByLines from './a.json';\n\n\n// //main component\n// class Maps extends Component {\n//     constructor() {\n//         super();\n//         this.state = {\n//             geojsonDataByLines: geojsonDataByLines\n\n//         };\n//     }\n\n//     polylineLineMaker() {\n//         const geojsonDataByLines = this.state.geojsonDataByLines;\n\n//         const testMe = geojsonDataByLines.features.map((cord) => {\n//             console.log('testme1', testMe)\n//             return cord.geometry.coordinates;\n//         });\n//         console.log('testme', testMe)\n//         return testMe;\n//     }\n\n//     polylineLineColor() {\n//         //The color for the polylines shoud go here \n//         const geojsonDataByLines = this.state.geojsonDataByLines;\n\n//         const testMe = geojsonDataByLines.features.map((cord) => {\n//             return cord.properties.color;\n//         });\n//         console.log(testMe)\n//         return testMe;\n//     }\n\n//     render() {\n//         return (\n//             <Map>\n//                 {geojsonDataByLines.features.map((feature) => (\n//                     <Polyline\n//                         positions={feature.geometry.coordinates}\n//                         color={feature.properties.color}\n//                     />\n//                 ))}\n//             </Map>\n//         );\n//     }\n// }\n\n\n\n\nclass Maps extends Component {\n    constructor() {\n        super();\n        this.state = {\n            // lat: 51.505,\n            // lng: -0.09,\n            zoom: 13,\n            geojsonDataByLines: geojsonDataByLines\n        }\n    }\n\n    // polylineLineMaker() {\n    //     const geojsonDataByLines = this.state.geojsonDataByLines;\n\n    //     const testMe = geojsonDataByLines.features.map((cord) => {\n    //         console.log('testme1', testMe)\n    //         return cord.geometry.coordinates;\n    //     });\n    //     console.log('testme', testMe)\n    //     return testMe;\n    // }\n\n    // polylineLineColor() {\n    //     //The color for the polylines shoud go here \n    //     const geojsonDataByLines = this.state.geojsonDataByLines;\n\n    //     const testMe = geojsonDataByLines.features.map((cord) => {\n    //         return cord.properties.color;\n    //     });\n    //     console.log(testMe)\n    //     return testMe;\n    // }\n\n    decode(encoded) {\n        // array that holds the points\n        var points = []\n        var index = 0, len = encoded.length;\n        var lat = 0, lng = 0;\n        while (index < len) {\n            var b, shift = 0, result = 0;\n            do {\n                b = encoded.charAt(index++).charCodeAt(0) - 63;//finds ascii                                                                                    //and substract it by 63\n                result |= (b & 0x1f) << shift;\n                shift += 5;\n            } while (b >= 0x20);\n            var dlat = ((result & 1) != 0 ? ~(result >> 1) : (result >> 1));\n            lat += dlat;\n            shift = 0;\n            result = 0;\n            do {\n                b = encoded.charAt(index++).charCodeAt(0) - 63;\n                result |= (b & 0x1f) << shift;\n                shift += 5;\n            } while (b >= 0x20);\n            var dlng = ((result & 1) != 0 ? ~(result >> 1) : (result >> 1));\n            lng += dlng;\n            points.push({ latitude: (lat / 1E5), longitude: (lng / 1E5) })\n        }\n        return points\n    }\n\n    findCenter(points) {\n        let x_sum = 0\n        let y_sum = 0\n        var i;\n        for (i = 0; i < points.length; i++) {\n            x_sum += points[i][0];\n            y_sum += points[i][1];\n        }\n\n        console.log('x_sum', x_sum, \"y_sum\")\n        return [(x_sum / (points.length)), (y_sum / (points.length))]\n    }\n    render() {\n        // const position = [this.state.lat, this.state.lng];\n        // const polyline = \"wupxDb~esQuA|AUHQAGDm@nAi@`@UNEFEl@J|@C^AJ_@v@Mh@?JDJVd@?^IZi@~@o@^EJ?JBFZPBJFFDZA^g@Jc@ASDa@B_@RCH?FFDb@HDN?FEFAFLPFABC@QDGDD@VCXLRDX?LFFD?@OLc@A[PEVOD@@FAHUd@AF@JJEFQFEFERAFDHNNBL?L[\\\\W?IHGJ?HHAZUHUCMBUTk@\\\\?LEHEFUNGEg@OG?UHKTSVMTe@f@c@^W?EETk@ZDHEL[HCPMDM?MHa@AIIMOIKADS@[G[IQEGSCQ?KDM^OFQP_@v@o@p@MV[XI`@AHDZ^H^?TJE\\\\Ff@?\\\\BJTNNBHATa@^_@BIFGPIJQNMRE\\\\MHB\\\\ZHADGHUDCLWAa@z@c@HOf@g@FKHITKb@KTMTOj@k@r@[TOh@k@bAyATi@Lk@B]Bu@CO?cBQq@MYSSIAKOAQBUAMGSAQZAXPN@N?XIBIGg@IMEMOIAKL[Pw@h@g@H?LTLF`@?NHb@l@XRX@FGFAXNP?FI@OFCDGBWN@No@FIp@Of@YBKEGKGMCCEVe@`@_@LO?]DMTQ~@e@XI\\\\?n@TR@TFvAh@b@f@PLTJNCJYHK?MK_@HOVU@WISSUWGCEGe@Sm@A_@CMECAQFQ\\\\SF?HHHp@FFPNH?VHDL@HKf@Cd@?HBN@t@Hb@HJXNDFBTEd@AV[Xa@R[?a@ESDS\\\\UJECEc@CQEGOE]]_@QEO?UGCo@ISDQEUACDWp@Mf@i@l@e@`@CD?REP]T?FH@PGZAFH?DCFKF]HMNm@jDk@|A_@xA?`@HLlAPn@l@HPI`@IJM@OEUMQCG@WZGBG?c@OODEJDJRLDHHd@DBNGFBJAV_@FEH?h@Np@ZNNZLXVLV@TIHi@GYMa@Ag@@aAF]JS@OAe@Oi@AYBMAKKEO?]DW@a@@ENIh@k@@]KSEAo@FOFKPKt@[p@Ef@F`@FDR@LDVBRAb@DTVHRLPPX@TMZAPAx@Cf@?j@G|@@P`@bA@JCLGLUTSNMBiA|@WIGKIs@GSKQmAq@KAKDM`@]^IPWZYb@qAxAWJMGS@y@d@Sh@EZ]p@Ur@INIDMGGWAI?KIW?UBEZDPGNa@^c@Jy@LI`@ETI\\\\ARWBMLMHBb@UBKb@w@J[b@QDI@IEOIAMXS@KCUBKd@IJG@EHEPEDWBEBMVWXG?SFG?QPK@KEM?I@OREJAJ?XCJIFUHEF?JEF[CORIDKAUQOSFu@HKDEH?d@ZJ?HCFIBIJGBMGMAM@MRBVC@KJWJEb@k@BK@WFYHILANQDBDTHJNCBITMDGAMCGAWGUIGI@wBtAURkEtEGHKZGv@FXDFVRf@FRNHLFb@HhAN~@?NO^Wj@GFG@GAGGMWCMAe@@KLMF?HDN?Ae@Yg@Me@U[GUIE@XNVBf@DFLAHH?DEPCB]EOQBQDE?IEECUIUIm@MSAWS]G_@MYCQM_@AQD}@FS\\\\OD@?LITMP@VDBJGb@a@j@_@JCLKHCTSt@KVMRSLSNMH]LGBIl@c@r@UJGHUDYNWLOTFLNDPKFCRFHLA~AsAr@c@XSd@o@Js@NMPEP@hADvDHlB?^DX@\\\\GTOPSHAZBLAt@SP@JAFQDo@RQJ_@DCEE_@IM@ED?DHR@Hc@b@KDI?EC?SFSAIN_@EQCEGBKZG@EACG@KHUAEWEWJEAEE?EPKBEIAMOSCGCCSBGJBv@b@F?HJh@\\\\JJFDDAr@u@BM@YRYHe@LYBKGIEA_@DG?QGUMQAKn@]XCB?REHu@B_@CW@GAEOF_@O_@GEQ?]MIIEIAM@MD[FMHGJCHAd@FJ[BQFGJSFGLDJOEW?KEETLr@XRKD?JBHHGLWLIPOPHDLCHD?HGLDDRBDDHPFAFILYXMBMIWBOHMTKFA\\\\XH^FFPDNGDB@HCPEDWFGF?HLJ@FCFMH[HCBEL@P?DDDJEHKFEPA\\\\[l@_BD[CG[QOQQGGAEFBFGDE?_@Um@WGGI@e@RGK@GBCNE?Cc@GMGe@DQKI?EGKEO?GG?QKM?IFAVLVAEIa@OCGCYBOBLDDZRPD`Ap@`@L\\\\BTHz@`@`Bp@^XLEFM@_@C_@U}@MM]Eg@OUS}@By@JK@YNEACEN_@HGPGDGbAUb@EDEG[KAM@[LI@EAAI@KLODSJODAPL\\\\DVETMRULI@KCM?KFU@OKS[QEQIqA@oADa@?M[MSCKICCBEQu@ECM@YTc@PQ?c@LQPIBu@?OCKIi@yAIY?SZq@BYDEF?TV@DCTUTAFFFRBDDLh@PXDBL?LIAI_@MKO?g@CQEMDLBBJMPm@Jo@ASEGPSDWAGGGKEI?CDCd@K\\\\?VELGJM@KIAMV_A?a@KO]Sk@e@UKW?OHKLGP@DJHPB\\\\?JBd@TFTKx@WZOj@IHI?AK@GRm@JIBG?SCGWIEEM_@KMMGE@GH?\\\\Tf@@L[TA^IZg@`Ac@Ja@XW?OCUk@a@QK?c@SQCEEEUGG]EU[EEG?E@OPGV@PDDJ@BDADUTKh@ELKJg@JmBPQ?YCWKIM?YZ_ANUj@OhAI^JDHR?JO@m@VWJSFEj@RRV\\\\BDBBLFH\\\\Nd@F\\\\XTJPDN?NCFEFY?SEI?GRMHQIACEEEAKBGJQBa@He@AMWMGQ@KJc@DADB?FILBFLMR?HCDG@ICCMASME?[RODYAeALKFQRE?AE@KPa@f@EPBBIUOAIGAWJQN]DGB@JCHDLHDBNAF[JAD?HRJT?VG^_@DANH`@^@HCVILKc@K?KLFP?HKB[QI?G@QR@Fn@FTJD?TOz@kAFCCR?NQNCXOVUBCJC\\\\JJF@DHADGDKAEE[g@IE]AWSQEIEAGLUAOII_@GaAF]To@XUFKA{@b@IEMa@KGK?_@FK?i@Kc@BUFcAAg@LG?y@W{@FKEOQ_@@KDe@h@u@f@QRMTALCt@@Fj@WN_@@EMY?ONAD@BBCb@B@LYVKNKDM@[DEHB^XP@FOFED?F?`@P^C^@ZBRFb@O`@?RQNAH@BHBPIVG@YSOAS?g@LU@MIWIm@?OCI?KDAJFFZJBD@LKHG@KCQOEAQ?[EI@}@Xa@VKNCNNZE@KCKDICUOQCYJEZJZ?HXXXJj@DHG|@a@b@G\\\\OZCNy@DIb@YZFFGFOPI`@Al@ILF^`@FBF?HIV_@FEAH\";\n\n\n        return (\n            <div>\n                <Map\n                    style={{ height: \"900px\" }}\n                    center={[30.43, -98.025306]}\n                    zoom={this.state.zoom}>\n                    <TileLayer\n                        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                        url='http://{s}.tile.osm.org/{z}/{x}/{y}.png' />\n                    {geojsonDataByLines.map((feature) => (\n                        <Marker position={feature['gps']}>\n                            <Popup>\n\n                                <span>\n                                    {feature['name']} \n                                    <br /> \n                                    <br /> \n                                    Description: {feature['description']}\n                                    <br />\n                                    <br />\n                                    Maximum Level: {feature['max']} feet <br />\n                                    Safe Level: {feature['safe']} feet <br />\n                                    Minimum Level: {feature['min']} feet <br />\n\n\n                                </span>\n                            </Popup>\n                        </Marker>\n                    ))}\n\n                </Map>\n\n            </div>\n\n        )\n    }\n}\n\nexport default Maps;","import React from \"react\";\nimport Maps from '../PaceBend/segment'\n\n\n\n\n\nclass PaceBendParent extends React.Component {\n\n\n\n\n    componentWillMount() {\n        // const state = this.props.location.state\n        // console.log('state', state.id);\n        //console.log('this.sssstate', this.state);\n    }\n\n    componentDidMount() {\n        // const state = this.props.location.state\n        // console.log('state', state);\n\n        // const { id } = this.props.match.params    \n        // this.props.location.pathname = '/segments?id=' + state.id\n        // console.log(this.props.location.pathname);\n        // this.setState({row: state});\n\n    }\n\n    render() {\n        // const state = this.props.location.state;\n        // if (state && this.state && !this.state.row) {        \n        //     this.setState({row: state});\n        // }\n        return (\n\n            <div className=\"parent-container\">\n                <Maps></Maps>\n            </div>\n        );\n\n    }\n}\n\nexport default PaceBendParent;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport PaceBendParent from './Components/PaceBendParent/paceBendParent';\n\nReactDOM.render(<PaceBendParent />, document.getElementById('root'));\n// import components I want to use\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}